use delphi::*;
use rstest::*;

#[cfg(all(unix, target_pointer_width = "64"))]
#[cfg(test)]
mod test_64_arch {
    use super::*;

    #[fixture]
    fn infiniteloop_bytes() -> &'static [u8] { include_bytes!("delphi/infiniteloop.o") }

    #[fixture]
    fn infiniteloop_expected_bytes() -> &'static [u8] {
        &[0x7f, 0x45, 0x4c, 0x46, 0x2, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x3e, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x9, 0x0, 0x6, 0x0, 0x55, 0x48, 0x89, 0xe5, 0x48, 0x8d, 0x64, 0x24, 0xf0, 0xeb, 0x5, 0xf, 0x1f, 0x44, 0x0, 0x0, 0xeb, 0xfe, 0x66, 0xc7, 0x45, 0xfc, 0x1, 0x0, 0xf, 0xbf, 0x45, 0xfc, 0x48, 0x89]
    }

    #[rstest]
    fn test_fpc_out_bytes_match(infiniteloop_bytes: &[u8], infiniteloop_expected_bytes: &[u8]) {
        assert_eq!(&infiniteloop_bytes[..infiniteloop_expected_bytes.len()], infiniteloop_expected_bytes);
    }
}
